kbab6e906852d8123dacfc1a61bd230c32fc7317490f9bd4615fe24665bf77f7
sk_preprod_26PHem9AhJZvU623DfE1x4sd
pk_prod_qblFNYngBkEdjEZ16jxxoWSM


#include <stdio.h>
int main() {    

    int number1, number2, sum;
    
    printf("Enter two integers: ");
    scanf("%d %d", &number1, &number2);

    // calculate the sum
    sum = number1 + number2;      

    printf("%d + %d = %d", number1, number2, sum);
    return 0;
}

name: GitHub Actions Secret Example

on:
  push:
    branches: [ main ]

jobs:
  secrets-in-github-actions:
    runs-on: windows-latest

    # The Secrect Actions GitHub example has three steps
    steps:
      # Show how to print unmasked GitHub secrets to the console
      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked:  "
          echo ${{ secrets.SECRET_TOKEN }}
          echo "Trick to echo GitHub Actions Secret:  "
          echo ${{secrets.SECRET_TOKEN}} | sed 's/./& /g' 

      # Use a GitHub Actions secret variable in a bash shell
      - name: Step 2 - GitHub Action if statement (true)
        env: 
          WHO_TO_TRUST: ${{ secrets.SECRET_TOKEN }}
        if:  env.WHO_TO_TRUST == 'TrustNo1'
        run: echo "I know what the secret token is!"

      # A GitHub Actions if statement with a secret environment variable
      - name: Step 3 - Conditional GitHub Action (false)
        shell: bash
        env: 
          WHO_TO_TRUST: ${{ secrets.SECRET_TOKEN }}
        if:  env.WHO_TO_TRUST != 'TrustNobody'
        run: echo "I was wrong thinking the GitHub secret was 'TrustNobody'!"

